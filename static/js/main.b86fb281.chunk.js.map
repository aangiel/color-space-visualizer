{"version":3,"sources":["style.js","ColorUtils.js","CubeUtils.js","RGBCubes.js","HSVCubes.js","components/ThreeColorSpace.js","components/InfoPopover.js","App.js","theme.js","index.js"],"names":["SPACING","logoSize","makeHeaderStyle","theme","space","top","spacing","left","makeLogoStyle","height","makeInfoStyle","right","makeButtonsStyle","bottom","useStyles","makeStyles","wrapper","backgroundColor","container","position","padding","borderRight","borderLeft","header","flexGrow","display","flexDirection","breakpoints","down","up","logo","infoButton","controlButtons","justify","buttonBox","justifyContent","alignItems","colorPreview","marginLeft","marginBottom","width","showAxes","buttons","marginRight","rgb2hex","r","g","b","selectTextColor","rgbStr","toRgbItem","val","x","Math","pow","luma","parseInt","slice","hsv2rgb","h","s","v","min","_to8bitsInteger","value","floor","createCubeMesh","size","color","y","z","geometry","THREE","material","mesh","castShadow","receiveShadow","transparent","set","createAxisArrow","origin","direction","len","modelName","originVec","dirVec","arrow","line","linewidth","userData","model","visible","createTickPlane","dirIdx","axisName","axisValue","side","plane","isTick","axis","OFFSET","_sortByColor","a","RGB","makeAxisTick","i","ret","j","charAt","idx","pos","getCubePosition","PLANE_THICKNESS","PLANE_SIZE","push","getCubeColor","k","round","totalSize","createColorHueRing","vertices","colors","STEPS","setHSL","setAttribute","vertexColors","degree","saturation","radian","PI","radius","cos","sin","ThreeColorSpace","props","divRef","React","createRef","rendererRender","selectedCube","currentSpin","rippleRadius","isMoving","cubes","attrs","fov","near","far","cameraPosition","cameraLookAt","lights","ambient","point","isLite","config","this","current","parentNode","offsetWidth","window","innerHeight","renderer","makeRenderer","shadowMap","enabled","camera","makeCamera","scene","makeScene","controls","makeOrbitControls","domElement","render","clickStart","makeEventStart","clickEnd","makeEventEnd","addEventListener","createCubes","appendChild","addAxes","tick","update","spinSelectedCube","rippleCubes","moveCubes","requestAnimationFrame","antialias","setSize","setClearColor","setPixelRatio","devicePixelRatio","aspect","add","light","makePlane","axes","ticks","axisTicks","createRGBAxes","RGBAxes","RGBTicks","dir","OFFSET_Y","MAX_RADIUS","HEIGHT","c","rad","rotation","createHSVAxes","HSVAxes","HSVTicks","concat","opacity","elm","OrbitControls","target","enableDamping","dampingFactor","abs","updateCubes","previewing","showingAxes","waitingHighlightCubes","cube","sqRadius","calcDistanceSquare","selectedAxis","showObj","nextModel","prevModel","foundMoving","nextPos","currentPos","subVectors","length","prevPos","addScaledVector","e","evtCoords","_getEventCoords","coords","intersects","_getIntersectObjects","object","isCube","isShowing","selectCube","selectAxis","selected","rgb","getHexString","onSelectColor","updateTicks","setPreviewing","nextProps","switchModel","updateAxes","toTransparent","clearAllCubes","axisInfo","vals","forceShow","highlightCubes","highlightAxisCubes","displayAllCubes","clearObject","R","G","B","sort","createRGBCubes","hsvProps","numCubes","max","H","S","V","HSV","addHSVProps","prop","setHex","ref","Component","currentTarget","targetTouches","pageX","pageY","changedTouches","clientX","clientY","offsetParent","offsetLeft","offsetTop","offsetHeight","event","raycaster","preventDefault","setFromCamera","intersectObjects","children","obj","v1","v2","dx","dy","dz","version","marginTop","linkBox","paddingRight","image","InfoPopover","classes","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","Button","aria-describedby","variant","onClick","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","ButtonGroup","className","aria-label","key","href","rel","src","alt","MODEL_NAMES","App","params","location","search","queries","split","lite","setModel","selecedColor","setColor","setShowingAxes","Container","maxWidth","style","Checkbox","checked","orientation","map","createMuiTheme","palette","primary","indigo","secondary","pink","background","default","ReactDOM","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b86fb281.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst SPACING = {\n  'sm': 1,\n  'md': 2,\n  'lg': 2,\n};\nconst logoSize = {\n  'sm': 48,\n  'md': 56,\n  'lg': 64,\n};\n\nconst makeHeaderStyle = (theme, space) => {\n  return {\n    top: theme.spacing(space),\n    left: theme.spacing(space),\n  };\n};\nconst makeLogoStyle = (height) => {\n  return {\n    height: height,\n  };\n};\n\nconst makeInfoStyle = (theme, space) => {\n  return {\n    top: theme.spacing(space),\n    right: theme.spacing(space),\n  };\n};\nconst makeButtonsStyle = (theme, space) => {\n  return {\n    bottom: theme.spacing(space),\n    right: theme.spacing(space),\n  };\n};\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    backgroundColor: '#262626',\n    //backgroundColor: '#DDDDDD',\n  },\n  container: {\n    position: 'relative',\n    padding: 0,\n    borderRight: '1px solid #f50057',\n    borderLeft : '1px solid #f50057',\n  },\n  header: {\n    position: 'absolute',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.down('sm')]: makeHeaderStyle(theme, SPACING.sm),\n    [theme.breakpoints.up('sm')]  : makeHeaderStyle(theme, SPACING.md),\n    [theme.breakpoints.up('lg')]  : makeHeaderStyle(theme, SPACING.lg),\n  },\n  logo: {\n    [theme.breakpoints.down('sm')]: makeLogoStyle(logoSize.sm),\n    [theme.breakpoints.up('sm')]  : makeLogoStyle(logoSize.md),\n    [theme.breakpoints.up('lg')]  : makeLogoStyle(logoSize.lg),\n  },\n  infoButton: {\n    position: 'absolute',\n    [theme.breakpoints.down('sm')]: makeInfoStyle(theme, SPACING.sm),\n    [theme.breakpoints.up('sm')]  : makeInfoStyle(theme, SPACING.md),\n    [theme.breakpoints.up('lg')]  : makeInfoStyle(theme, SPACING.lg),\n  },\n  controlButtons: {\n    position: 'absolute',\n    display: 'flex',\n    justify: 'flex-end',\n    flexDirection: 'column',\n    [theme.breakpoints.down('sm')]: makeButtonsStyle(theme, SPACING.sm),\n    [theme.breakpoints.up('sm')]  : makeButtonsStyle(theme, SPACING.md),\n    [theme.breakpoints.up('lg')]  : makeButtonsStyle(theme, SPACING.lg),\n  },\n  buttonBox: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-start',\n  },\n  colorPreview: {\n    marginLeft: 8,\n    marginBottom: 8,\n    width: 130,\n    padding: '0 8px',\n    justifyContent: 'flex-start',\n  },\n  showAxes: {\n    backgroundColor: '#ffffff',\n    \"&:hover, &:focus\": {\n      backgroundColor: '#ffffff',\n    },\n  },\n  buttons: {\n    height: '42px',\n    marginRight: '6px',\n  }\n}));\n\nexport default useStyles;\n","/**\n * @desc\n * ColorUtils module\n * @module ColorUtils\n */\n\n\nconst rgb2str = (r, g, b) => {\n  return \"#\" + \n      _toHexStr(r) + \n      _toHexStr(g) + \n      _toHexStr(b);\n};\n\nconst rgb2hex = (r, g, b) => {\n  return r * (256 ** 2) + g * (256) + b;\n};\n\nconst selectTextColor = (rgbStr) => {\n  const toRgbItem = val => {\n    const x = val / 255.0;\n    return x <= 0.03928 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n  const r = toRgbItem(parseInt(rgbStr.slice(1, 3), 16));\n  const g = toRgbItem(parseInt(rgbStr.slice(3, 5), 16));\n  const b = toRgbItem(parseInt(rgbStr.slice(5, 7), 16));\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n\n  const lumaWhite = 1.0;\n  const lumaBlack = 0.0;\n\n  /* calc contrast ratio */\n  const white = (lumaWhite + 0.05) / (luma + 0.05)\n  const black = (luma + 0.05) / (lumaBlack + 0.05)\n  return white < black ? '#000000' : '#ffffff'\n};\n\n\n/**\n * @param {Number} h degree of Hue in HSV color model (0 - 359)\n * @param {Number} s percentage of Saturation in HSV color model (0 - 100)\n * @param {Number} v percentage of Value in HSV color model (0 - 100)\n * @return {Number} RGB HEX integer\n */\nconst hsv2rgb = (h, s, v) => {\n  let r, g, b;\n  const max = v;\n  const min = v - s;\n  if (h < 0 || h >= 360) {\n    r = 0;\n    g = 0;\n    b = 0;\n  } else if (h < 60) {\n    r = max;\n    g = min + (max - min) * h / 60;\n    b = min;\n  } else if (h < 120) {\n    r = min + (max - min) * (120 - h) / 60;\n    g = max;\n    b = min;\n  } else if (h < 180) {\n    r = min;\n    g = max;\n    b = min + (max - min) * (h - 120) / 60;\n  } else if (h < 240) {\n    r = min;\n    g = min + (max - min) * (240 - h) / 60;\n    b = max;\n  } else if (h < 300) {\n    r = min + (max - min) * (h - 240) / 60;\n    g = min;\n    b = max;\n  } else if (h < 360) {\n    r = max;\n    g = min;\n    b = min + (max - min) * (360 - h) / 60;\n  }\n  r = _to8bitsInteger(r);\n  g = _to8bitsInteger(g);\n  b = _to8bitsInteger(b);\n  return rgb2hex(r, g, b);\n}\n\n\n/******************************************\n * private functions\n ******************************************/\nconst _toHexStr = n => {\n  if (n < 16) {\n    return \"0\" + n.toString(16);\n  }\n  return n.toString(16);\n};\n\n/**\n * convert percentage value to 8bit digit (0-1.0 -> 0-255) \n * @param {Number} val\n * @param {Number} n \n * @return rounded value\n */\nconst _to8bitsInteger = val => {\n  const value = Math.floor(255 * val / 100.0);\n  const ret = value < 0 ? 255 - value : value;\n  return ret;\n};\n\n\nexport { rgb2str, rgb2hex, hsv2rgb, selectTextColor };\n","import * as THREE from \"three\";\n\nexport const PLANE_THICKNESS = 1;\nexport const PLANE_SIZE = 5\n\nexport const createCubeMesh = (size, color, x, y, z) => {\n  const geometry = new THREE.CubeGeometry(size, size, size);\n  const material = new THREE.MeshLambertMaterial({color: color});\n  const mesh = new THREE.Mesh(geometry, material);\n  mesh.castShadow = true;\n  mesh.receiveShadow = true;\n  mesh.material.transparent = true;\n  mesh.position.set(x, y, z);\n  return mesh;\n};\n\nexport const createAxisArrow = (origin, direction, color, len, modelName) => {\n  const originVec = new THREE.Vector3(...origin);\n  const dirVec = new THREE.Vector3(...direction);\n  const arrow = new THREE.ArrowHelper(dirVec, originVec, len, color, 6, 4 );\n  arrow.line.material.linewidth = 2;\n  arrow.userData.model = modelName;\n  arrow.visible = false;\n  return arrow;\n};\n\nexport const createTickPlane = (dirIdx, color, position,\n    modelName, axisName, axisValue) => {\n  const size = [PLANE_SIZE, PLANE_SIZE, PLANE_SIZE];\n  size[dirIdx] = PLANE_THICKNESS;\n  const geometry = new THREE.BoxGeometry(...size);\n  const material = new THREE.MeshLambertMaterial(\n      {color: color, side: THREE.DoubleSide});\n  const plane = new THREE.Mesh(geometry, material);\n  plane.position.set(...position);\n  plane.visible = false;\n  plane.castShadow = true;\n  plane.receiveShadow = true;\n  plane.material.transparent = true;\n  plane.userData = {\n    isTick: true,\n    model: modelName,\n    axis: axisName,\n    value: axisValue,\n    position: plane.position,\n  };\n  return plane;\n};\n","import {rgb2hex} from './ColorUtils';\nimport {createCubeMesh, createTickPlane, createAxisArrow, PLANE_SIZE, PLANE_THICKNESS} from './CubeUtils';\n\nconst NUM = 8;\nconst CUBE_SIZE = 3;\n\nconst SPACING = 8;\nconst OFFSET = [0, 80, 0];\n\n\nconst createRGBCubes = () => {\n  const ret = []\n  for (let i = 0; i < NUM; i++) {\n    for (let j = 0; j < NUM; j++) {\n      for (let k = 0; k < NUM; k++) {\n        const color = getCubeColor(i, j, k);\n        const [x, y, z] = getCubePosition(i, j, k);\n        const cube = createCubeMesh(CUBE_SIZE, color, x, y, z);\n        cube.userData.RGB = {\n          color: color,\n          position: [x, y, z],\n          vals: {\n            R: i,\n            G: j,\n            B: k,\n          },\n        };\n        cube.userData.isCube = true;\n        ret.push(cube);\n      }\n    }\n  }\n  ret.sort(_sortByColor);\n  return ret;\n};\n\nconst _sortByColor = (a, b) => {\n  if (a.userData.RGB.color > b.userData.RGB.color) {\n      return 1;\n  }\n  if (a.userData.RGB.color < b.userData.RGB.color ) {\n      return -1;\n  }\n  return 0;\n};\n\n\nconst createRGBAxes = () => {\n  const axes = [];\n  const ticks = [];\n  const origin = getCubePosition(0, 0, 0);\n  const len = 120;\n  const colors = [0xff0000, 0x00ff00, 0x0000ff];\n  for (let i = 0; i < 3; i++) {\n    const direction = [0, 0, 0];\n    direction[i] = 1;\n    const axis = createAxisArrow(origin, direction, colors[i], len, 'RGB');\n    axes.push(axis);\n\n    const axisTicks = makeAxisTick(i, colors[i]);\n    for (const tick of axisTicks) {\n      ticks.push(tick);\n    }\n  }\n  return [axes, ticks];\n};\n\n\nconst makeAxisTick = (i, color) => {\n  const ret = []\n  for (let j = 0; j < NUM; j++) {\n    const axis = 'RGB'.charAt(i);\n    const idx = [0, 0, 0];\n    idx[i] = j;\n    const pos = getCubePosition(...idx);\n    pos[(0 + i) % 3] += PLANE_THICKNESS / 2;\n    pos[(1 + i) % 3] -= PLANE_SIZE / 2;\n    pos[(2 + i) % 3] -= PLANE_SIZE / 2;\n\n    const plane = createTickPlane(i, color, pos, 'RGB', axis, j);\n    ret.push(plane);\n  }\n  return ret;\n};\n\n\nconst getCubeColor = (i, j, k) => {\n  const colorSpacing = 255.0 / (NUM - 1);\n  return rgb2hex(\n    Math.round(i * colorSpacing),\n    Math.round(j * colorSpacing),\n    Math.round(k * colorSpacing)\n  );\n};\n\nconst getCubePosition = (i, j, k) => {\n  const totalSize = CUBE_SIZE * NUM + SPACING * (NUM - 1);\n  return [\n    CUBE_SIZE * (i + 1) + SPACING * i - (totalSize / 2) + OFFSET[0],\n    CUBE_SIZE * (j + 1) + SPACING * j - (totalSize / 2) + OFFSET[1],\n    CUBE_SIZE * (k + 1) + SPACING * k - (totalSize / 2) + OFFSET[2]\n  ];\n};\n\nexport {createRGBCubes, createRGBAxes};\n","import * as THREE from \"three\";\nimport {hsv2rgb} from './ColorUtils';\nimport {createTickPlane, createAxisArrow, PLANE_SIZE, PLANE_THICKNESS} from './CubeUtils';\n\nconst NUM = 6;   // number of cubes in circle\nconst MAX_RADIUS = 60;\n\nconst STEPS = 7;\nconst HEIGHT = 140;\nconst OFFSET_Y = 10;\n\n\nconst addHSVProps = (cubes) => {\n  const hsvProps = []\n  for (let i = 0; i <= STEPS; i++) {\n    const value = i / STEPS * 100.0;\n    for (let j = 0; j <= i; j++) {\n      const saturation = j / STEPS * 100.0;\n      const numCubes = Math.max(j * NUM, 1);\n      for (let k = 0; k < numCubes; k++) {\n        const degree = 360.0 / numCubes * k;\n        const color = hsv2rgb(degree, saturation, value);\n        const [x, y, z] = getCubePosition(degree, saturation, value);\n        hsvProps.push({\n          color: color,\n          position: [x, y, z],\n          vals: {\n            H: degree,\n            S: saturation,\n            V: value,\n          },\n          forceShow: {\n            // if saturation is 0,\n            // show this cube whenever filtered by any hue value\n            H: saturation === 0,\n          }\n        });\n      }\n    }\n  }\n  hsvProps.sort(_sortByColor);\n  for (let i = 0; i < cubes.length; i++) {\n    const cube = cubes[i];\n    cube.userData.HSV = hsvProps[i];\n  }\n  return;\n};\n\nconst createHSVAxes = () => {\n  const axes = [];\n  const ticks = [];\n  const conf = [\n    // saturation\n    {\n      dir: [1, 0, 0],\n      origin: [0, OFFSET_Y + HEIGHT, 0],\n      len: MAX_RADIUS + 30,\n      color: 0xbbbbbb,\n    },\n    // value\n    {\n      dir: [0, 1, 0],\n      origin: [0, OFFSET_Y, 0],\n      len: HEIGHT + 40,\n      color: 0xeeeeee,\n    },\n  ];\n  for (const c of conf) {\n    const axis = createAxisArrow(c.origin, c.dir, c.color, c.len, 'HSV');\n    axes.push(axis);\n  }\n\n  // tick for saturation axis\n  for (let i = 0; i <= STEPS; i++) {\n    const saturation = i / STEPS * 100.0;\n    const pos = getCubePosition(0, saturation, 100.0);\n    pos[0] += PLANE_THICKNESS / 2;\n    pos[1] += PLANE_SIZE / 2;\n    const plane = createTickPlane(0, 0xdddddd, pos, 'HSV', 'S', saturation);\n    ticks.push(plane);\n  }\n\n  // tick for value axis\n  for (let i = 0; i <= STEPS; i++) {\n    const value = i / STEPS * 100.0;\n    const pos = getCubePosition(180, 0, value);\n    pos[0] -= PLANE_SIZE / 2;\n    const plane = createTickPlane(1, 0xdddddd, pos, 'HSV', 'V', value);\n    ticks.push(plane);\n  }\n\n  // hue\n  axes.push(createColorHueRing());\n  for (let i = 0; i < NUM; i++) {\n    const degree = 360.0 / NUM * i;\n    const rad = -(Math.PI / 180) * degree;\n    const pos = getCubePosition(degree, 100.0, 100.0);\n    pos[0] += PLANE_SIZE / 2 * Math.cos(rad);\n    pos[2] += PLANE_SIZE / 2 * Math.sin(rad);\n    pos[1] += PLANE_SIZE / 2;\n    const color = hsv2rgb(degree, 100.0, 100.0);\n    const plane = createTickPlane(2, color, pos, 'HSV', 'H', degree);\n    plane.rotation.y = -rad;\n    ticks.push(plane);\n  }\n\n  return [axes, ticks];\n};\n\nconst createColorHueRing = () => {\n  const N = STEPS * NUM;\n  const geometry = new THREE.BufferGeometry();\n  const vertices = [];\n  const color = new THREE.Color();\n  const colors = [];\n  for (let i = 0; i <= N; i++) {\n    const degree = 360.0 / N * i;\n    const [x, y, z] = getCubePosition(degree, 100.0, 100.0);\n    vertices.push(x, y, z);\n    color.setHSL(i / N, 1.0, 0.5);\n    colors.push( color.r, color.g, color.b );\n  }\n  geometry.setAttribute( 'position',\n      new THREE.Float32BufferAttribute( vertices, 3 ) );\n  geometry.setAttribute( 'color',\n      new THREE.Float32BufferAttribute( colors, 3 ) );\n  const material = new THREE.LineBasicMaterial(\n      { color: 0xffffff, vertexColors: THREE.VertexColors } );\n  const line = new THREE.Line(geometry, material);\n  line.material.linewidth = 2;\n  line.userData.model = 'HSV';\n  line.visible = false;\n  return line;\n};\n\nconst _sortByColor = (a, b) => {\n  if (a.color > b.color) {\n      return 1;\n  }\n  if (a.color < b.color ) {\n      return -1;\n  }\n  return 0;\n};\n\n\nconst getCubePosition = (degree, saturation, value) =>{\n  const radian = -(degree * Math.PI / 180.0);\n  const radius = MAX_RADIUS * saturation / 100.0;\n  return [\n    Math.cos(radian) * radius,\n    HEIGHT * (value / 100.0) + OFFSET_Y,\n    Math.sin(radian) * radius\n  ];\n};\n\nexport {addHSVProps, createHSVAxes};\n","import React from \"react\";\n\nimport * as THREE from \"three\";\nimport OrbitControls from \"three-orbitcontrols\";\n\nimport { createRGBCubes, createRGBAxes } from '../RGBCubes';\nimport { addHSVProps, createHSVAxes } from '../HSVCubes';\n\nconst OPACITY_TRANSPARENT = 0.15;\n\n\nclass ThreeColorSpace extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.rendererRender = () => {};\n    this.selectedCube = null;\n    this.currentSpin = 0.0;\n    this.rippleRadius = 0.0;\n    this.isMoving = false;\n    this.cubes = null;\n\n    this.attrs = {\n      width :  800,\n      height:  800,\n      color : 0x303030,\n\n      fov  : 60,   // field of view\n      near : 1,    // near clip\n      far  : 200,  // far clip\n\n      // for RGB\n      cameraPosition: [240, 160, 200],\n      cameraLookAt:   [0, 70, 0],\n\n      lights: {\n        ambient: [0xffffff, 1.0],  // color, strength\n        point: {\n          castShadow: !this.props.isLite,\n          config: [0xffffff, 1, 500], // color, strength, distance, decay\n          position: [0, 300, 0]\n        },\n      },\n    };\n  }\n\n  componentDidMount() {\n    const width = this.divRef.current.parentNode.offsetWidth - 2;\n    const height = window.innerHeight;\n    const renderer = this.makeRenderer(width, height);\n    renderer.shadowMap.enabled = !this.props.isLite;\n\n    const camera = this.makeCamera(width, height);\n    this.scene = this.makeScene();\n    const controls = this.makeOrbitControls(camera, renderer.domElement);\n\n    this.rendererRender = () => {renderer.render(this.scene, camera);};\n\n    /* attach click event */\n    const clickStart = this.makeEventStart();\n    const clickEnd = this.makeEventEnd(this.scene, camera);\n    renderer.domElement.addEventListener('mousedown',  clickStart);\n    renderer.domElement.addEventListener('touchstart', clickStart);\n    renderer.domElement.addEventListener('mouseup',  clickEnd);\n    renderer.domElement.addEventListener('touchend', clickEnd);\n\n    this.createCubes();\n    this.divRef.current.appendChild(renderer.domElement);\n    this.addAxes();\n\n    const tick = () => {\n      controls.update();\n\n      /* animation */\n      if (this.currentSpin) {\n        this.spinSelectedCube();\n      }\n      if (this.rippleRadius) {\n        this.rippleCubes();\n      }\n      if (this.isMoving) {\n        this.moveCubes();\n      }\n      this.rendererRender();\n      requestAnimationFrame(tick);\n    };\n    tick();\n  }\n\n  makeRenderer (width, height) {\n    const renderer = new THREE.WebGLRenderer({antialias: true});\n    renderer.setSize(width, height);\n    renderer.setClearColor(this.attrs.color, 1.0);\n    if (!this.props.isLite) {\n      renderer.setPixelRatio(window.devicePixelRatio);\n    }\n    return renderer;\n  }\n\n  makeCamera (width, height) {\n    const aspect = width / height;\n    const camera = new THREE.PerspectiveCamera(\n        this.attrs.fov, aspect, this.attrs.near, this.far);\n    camera.position.set(...this.attrs.cameraPosition); // x, y, z\n    return camera;\n  }\n\n  makeScene () {\n    const scene = new THREE.Scene();\n\n    /* light settings */\n    if (this.attrs.lights.ambient) {\n      const ambient = new THREE.AmbientLight(...this.attrs.lights.ambient);\n      scene.add(ambient);\n    }\n    if (this.attrs.lights.point) {\n      const light = new THREE.PointLight(...this.attrs.lights.point.config);\n      light.position.set(...this.attrs.lights.point.position);\n      light.castShadow = this.attrs.lights.point.castShadow;\n      scene.add(light);\n    }\n\n    /* plane settings */\n    const plane = this.makePlane();\n    scene.add(plane);\n    const gridLineColor = 0x606060;\n    scene.add(new THREE.GridHelper(1200, 60, gridLineColor, gridLineColor));\n\n    return scene;\n  }\n\n  addAxes () {\n    this.axes = [];\n    this.ticks = [];\n    const [RGBAxes, RGBTicks] = createRGBAxes();\n    const [HSVAxes, HSVTicks] = createHSVAxes();\n    for (const axis of RGBAxes.concat(HSVAxes)) {\n      this.scene.add(axis);\n      this.axes.push(axis);\n    }\n    for (const tick of RGBTicks.concat(HSVTicks)) {\n      this.scene.add(tick);\n      this.ticks.push(tick);\n    }\n  }\n\n  makePlane () {\n    const plane = new THREE.Mesh(\n      new THREE.PlaneGeometry(1200, 1200, 2),\n      new THREE.MeshStandardMaterial({\n        color : 0x404040,\n        side: THREE.DoubleSide,\n        transparent: true,\n        opacity: 0.85,\n      })\n    );\n    plane.position.set(0, -1, 0);\n    plane.rotation.set(Math.PI / 2.0, 0, 0);\n    plane.castShadow = false;\n    plane.receiveShadow = true;\n    return plane;\n  }\n\n  makeOrbitControls (camera, elm) {\n    const controls = new OrbitControls(camera, elm)\n    controls.target = new THREE.Vector3(...this.attrs.cameraLookAt);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.1;\n    return controls\n  }\n\n  spinSelectedCube () {\n    const SPIN_DAMPING_FACTOR = 0.93;\n    this.selectedCube.rotation.x += this.currentSpin;\n    this.selectedCube.rotation.y += this.currentSpin;\n    if (this.currentSpin > 0.1) {\n      this.currentSpin *= SPIN_DAMPING_FACTOR;\n    } else if (Math.abs(\n          this.selectedCube.rotation.y % (Math.PI / 2.0)) < 0.09) {\n      /* stop spinning */\n      this.currentSpin = 0.0;\n      this.selectedCube.rotation.set(0, 0, 0);\n      this.updateCubes(this.props.previewing, this.props.showingAxes);\n    }\n  }\n\n  rippleCubes () {\n    const MAX_RADIUS = 200;\n    const RIPPLE_SPEED = 6;\n    for (const cube of this.waitingHighlightCubes) {\n      const sqRadius = this.rippleRadius * this.rippleRadius;\n      const dis = calcDistanceSquare(cube.position, this.selectedAxis.position);\n      if (dis < sqRadius) {\n        showObj(cube);\n      }\n    }\n    if (0 < this.rippleRadius && this.rippleRadius < MAX_RADIUS) {\n      this.rippleRadius += RIPPLE_SPEED;\n    } else {\n      /* stop rippling */\n      this.rippleRadius = 0;\n    }\n  }\n\n  moveCubes () {\n    const DURATION = 20;\n    const nextModel = this.props.model;\n    const prevModel = (nextModel === 'RGB' ? 'HSV' : 'RGB');\n    let foundMoving = false;\n    for (const cube of this.cubes) {\n      const nextPos = new THREE.Vector3(...cube.userData[nextModel].position);\n      const currentPos = cube.position;\n      const diff = new THREE.Vector3().subVectors(nextPos, currentPos);\n      if (diff.length() < 2.0) {\n        cube.position.set(...cube.userData[nextModel].position);\n      } else {\n        foundMoving = true;\n        const prevPos = new THREE.Vector3(...cube.userData[prevModel].position);\n        const dirVec = new THREE.Vector3().subVectors(nextPos, prevPos);\n        cube.position.addScaledVector(dirVec, 1 / DURATION);\n      }\n    }\n    if (!foundMoving) {\n      this.isMoving = false;\n    }\n  }\n\n  makeEventStart () {\n    const onStart = (e) => {\n      this.evtCoords = _getEventCoords(e);\n    };\n    return onStart;\n  }\n\n  makeEventEnd (scene, camera) {\n    const onClicked = (e) => {\n      const coords = _getEventCoords(e);\n      if (coords.x !== this.evtCoords.x || coords.y !== this.evtCoords.y) {\n        return;\n      }\n      const intersects = _getIntersectObjects(e, scene, camera);\n      for (const intersect of intersects) {\n        const mesh = intersect.object;\n        if (this.props.showingAxes) {\n          if (mesh.userData.isCube && mesh.userData.isShowing) {\n            this.selectCube(mesh);\n            return;\n          }\n          if (mesh.userData.isTick &&\n              mesh.userData.model === this.props.model) {\n            this.selectAxis(mesh);\n            return;\n          }\n        }\n        if (!this.props.showingAxes && mesh.userData.isCube) {\n          this.selectCube(mesh);\n          return;\n        }\n      }\n    };\n    return onClicked;\n  }\n\n  selectCube (selected) {\n    /* reset rotation of cube previously selected */\n    this.selectedCube.rotation.set(0, 0, 0);\n    this.selectedCube = selected;\n    this.currentSpin = 1.0;\n    const color = this.selectedCube.material.color;\n    const rgb = color.getHexString();\n    this.props.onSelectColor(`#${rgb}`);\n    this.updateCubes(this.props.previewing, this.props.showingAxes);\n  }\n\n  selectAxis (selected) {\n    const model = this.props.model;\n\n    if (this.selectedAxis &&\n        this.selectedAxis.model === model &&\n        this.selectedAxis.axis  === selected.userData.axis &&\n        this.selectedAxis.value === selected.userData.value) {\n      /* if selected axis is the currently selected axis,\n       * turn off that filtering */\n      this.selectedAxis = null;\n\n    } else {\n      /* start rippling */\n      this.rippleRadius = 0.1;\n      this.selectedAxis = {\n        model: model,\n        axis:  selected.userData.axis,\n        value: selected.userData.value,\n        position: selected.userData.position,\n      };\n    }\n    this.updateCubes(this.props.previewing, this.props.showingAxes);\n    this.updateTicks(this.props.previewing, this.props.showingAxes, model);\n    this.props.setPreviewing(false);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const model = nextProps.model\n    this.switchModel(model);\n    this.updateCubes(nextProps.previewing, nextProps.showingAxes);\n    this.updateAxes(nextProps.previewing, nextProps.showingAxes, model);\n    this.updateTicks(nextProps.previewing, nextProps.showingAxes, model);\n    return false;\n  }\n\n  clearAllCubes () {\n    for (let cube of this.cubes) {\n      toTransparent(cube);\n    }\n  }\n\n  highlightCubes () {\n    this.clearAllCubes();\n    showObj(this.selectedCube);\n  }\n\n  highlightAxisCubes () {\n    this.waitingHighlightCubes = [];\n    const model = this.selectedAxis.model;\n    const axis  = this.selectedAxis.axis;\n    const value = this.selectedAxis.value;\n    for (let cube of this.cubes) {\n      const axisInfo = cube.userData[model]\n      if (axisInfo.vals[axis] === value ||\n          (axisInfo.forceShow && axisInfo.forceShow[axis])) {\n        if (this.rippleRadius) {\n          toTransparent(cube);\n          this.waitingHighlightCubes.push(cube);\n        } else {\n          showObj(cube);\n        }\n      } else {\n        toTransparent(cube);\n      }\n    }\n  }\n\n  displayAllCubes () {\n    for (let cube of this.cubes) {\n      showObj(cube);\n    }\n  }\n\n  updateCubes (previewing, showingAxes) {\n    if (previewing || this.currentSpin > 0.0) {\n      this.highlightCubes();\n    } else if (showingAxes) {\n      if (this.selectedAxis) {\n        this.highlightAxisCubes();\n      } else {\n        this.clearAllCubes();\n      }\n    } else if (!this.currentSpin) {\n      this.displayAllCubes();\n    }\n  }\n\n  updateAxes (previewing, showingAxes, model) {\n    for (const axis of this.axes) {\n      if (!showingAxes) {\n        axis.visible = false;\n      } else if (axis.userData.model === model) {\n        axis.visible = showingAxes;\n      } else {\n        axis.visible = !showingAxes;\n      }\n    }\n  }\n\n  updateTicks (previewing, showingAxes, model) {\n    const OPACITY_NOT_SELECTED = 0.3;\n    const OPACITY_ALL_DISPLAYED = 0.8;\n    for (const tick of this.ticks) {\n      if (!showingAxes) {\n        tick.visible = false;\n\n      } else if (tick.userData.model !== model) {\n        /* tick of currently invisible model */\n        clearObject(tick);\n\n      } else {\n        /* showingAxes && showing model */\n        if (this.selectedAxis) {\n          const axis  = this.selectedAxis.axis;\n          const value = this.selectedAxis.value;\n          if (axis === tick.userData.axis && value === tick.userData.value) {\n            /* tick of selected axis */\n            showObj(tick);\n          } else {\n            /* not selected */\n            toTransparent(tick, OPACITY_NOT_SELECTED);\n          }\n\n        } else {\n          /* axis has NOT yet been selected */\n          toTransparent(tick, OPACITY_ALL_DISPLAYED);\n        }\n      }\n    }\n  }\n\n  createCubes () {\n    this.cubes = createRGBCubes();\n    addHSVProps(this.cubes);\n    for (let cube of this.cubes) {\n      this.scene.add(cube);\n    }\n    this.selectedCube = this.cubes.slice(-1)[0];\n  };\n\n  switchModel(model) {\n    this.isMoving = true;\n    for (let cube of this.cubes) {\n      const prop = cube.userData[model];\n      cube.material.color.setHex(prop.color);\n    }\n  }\n\n  render() {\n    return (\n      <div ref={this.divRef}/>\n    )\n  }\n}\n\n\nconst _getEventCoords = (e) => {\n  /*\n   * get coordinates of touch or mouse event in the target element\n   */\n  let x, y;\n  const elm = e.currentTarget;\n  if (e.targetTouches && e.targetTouches.length) {\n    x = e.targetTouches[0].pageX;\n    y = e.targetTouches[0].pageY;\n  } else if (e.changedTouches && e.changedTouches.length){\n    x = e.changedTouches[0].pageX;\n    y = e.changedTouches[0].pageY;\n  } else {\n    /* mousedown, mouseup, mousemove or click */\n    x = e.clientX\n    y = e.clientY\n  }\n  x -= elm.offsetParent.offsetLeft;\n  y -= elm.offsetParent.offsetTop;\n  const w = elm.offsetWidth;\n  const h = elm.offsetHeight;\n  const coords = {\n    x :  (x / w) * 2 - 1,\n    y : -(y / h) * 2 + 1,\n  };\n  return coords;\n};\n\nconst _getIntersectObjects = (event, scene, camera) => {\n  const raycaster = new THREE.Raycaster();\n  event.preventDefault();\n  const coords = _getEventCoords(event);\n  raycaster.setFromCamera(coords, camera);\n  const intersects = raycaster.intersectObjects(scene.children);\n  return intersects;\n};\n\n\nconst toTransparent = (obj, opacity) => {\n  opacity = opacity || OPACITY_TRANSPARENT;\n  obj.visible = true;\n  obj.castShadow = false;\n  obj.receiveShadow = false;\n  obj.material.visible = true;\n  obj.material.opacity = opacity;\n  obj.userData.isShowing = false;\n}\n\nconst showObj = obj => {\n  obj.visible = true;\n  obj.castShadow = true;\n  obj.receiveShadow = true;\n  obj.material.visible = true;\n  obj.material.opacity = 1.0;\n  obj.userData.isShowing = true;\n}\n\nconst clearObject = obj => {\n  obj.visible = false;\n  obj.material.visible = false;\n}\n\nconst calcDistanceSquare = (v1, v2) => {\n  const dx = v1.x - v2.x;\n  const dy = v1.y - v2.y;\n  const dz = v1.z - v2.z;\n  return dx * dx + dy * dy + dz * dz;\n}\n\nexport default ThreeColorSpace;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Button from '@material-ui/core/Button';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nconst useStyles = makeStyles(theme => ({\n  version: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  linkBox: {\n    padding: theme.spacing(1),\n    paddingRight: theme.spacing(0),\n    backgroundColor: '#ffffff',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  image: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 32,\n  },\n}));\n\nexport default function InfoPopover(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? 'info-popover' : undefined;\n\n  return (\n    <div>\n      <Button aria-describedby={id} color=\"secondary\" variant=\"outlined\" onClick={handleClick}>\n        <InfoIcon />\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <ButtonGroup\n          size=\"small\"\n          className={classes.version}\n          color=\"secondary\"\n          aria-label=\"version buttons\"\n        >\n          <Button\n            key='basic'\n            variant={!props.isLite ? 'contained' : 'outlined'}\n            href=\"/\"\n          >\n            basic\n          </Button>\n          <Button\n            key='lite'\n            variant={props.isLite ? 'contained' : 'outlined'}\n            href=\"/?lite=true\"\n          >\n            Lite\n          </Button>\n        </ButtonGroup>\n        <div className={classes.linkBox}>\n          <span>source code</span>\n          <a target='_blank' rel=\"noopener noreferrer\"\n            href='https://github.com/choo/color-space-visualizer'>\n            <img  className={classes.image}\n              src={'GitHub-Mark-64px.png'} alt={'GitHub Link'} />\n          </a>\n        </div>\n        <div className={classes.linkBox}>\n          <span>author</span>\n          <a target='_blank' rel=\"noopener noreferrer\"\n            href='https://twitter.com/choo_s'>\n            <img  className={classes.image}\n              src={'Twitter_Social_Icon_Rounded_Square_Color.png'}\n              alt={'twitter Link'} />\n          </a>\n        </div>\n      </Popover>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport useStyles from './style.js';\nimport ThreeColorSpace from './components/ThreeColorSpace';\nimport InfoPopover from './components/InfoPopover';\nimport {selectTextColor} from './ColorUtils';\n\nconst MODEL_NAMES = ['RGB', 'HSV'];\n\n\nconst App = (props) => {\n  const params = {};\n  if (window.location.search) {\n    const queries = window.location.search.slice(1).split('&');\n    for (const q of queries) {\n      const [k, v] = q.split('=');\n      params[k] = v\n    }\n  }\n  const isLite  = params.lite && params.lite === 'true' ? true : false;\n  const classes = useStyles();\n  const [model, setModel] = useState(MODEL_NAMES[0]);\n  const [selecedColor, setColor] = useState('#ffffff');\n  const [previewing, setPreviewing] = useState(false);\n  const [showingAxes, setShowingAxes] = useState(false);\n  return (\n    <div className={classes.wrapper}>\n      <Container maxWidth='md' className={classes.container}>\n\n        <div className={classes.header}>\n          <a href='/'>\n            <img className={classes.logo} src={'logo_20_02.png'} alt={'logo'} />\n          </a>\n        </div>\n\n        <div className={classes.infoButton}>\n          <InfoPopover isLite={isLite}/>\n        </div>\n\n        <ThreeColorSpace\n          model={model}\n          previewing={previewing}\n          showingAxes={showingAxes}\n          onSelectColor={rgb => {setColor(rgb)}}\n          setPreviewing={setPreviewing}\n          isLite={isLite}\n        />\n\n        <div className={classes.controlButtons}>\n          <div className={classes.buttonBox}>\n            <Button\n              className={classes.colorPreview}\n              style={{\n                backgroundColor: selecedColor,\n                color: selectTextColor(selecedColor),\n              }}\n              onClick={() => setPreviewing(!previewing)}\n              aria-label=\"color preview\"\n            >\n              <Checkbox\n                checked={previewing}\n                style={{\n                  color: selectTextColor(selecedColor),\n                }}\n                value=\"color preview\" />\n              {selecedColor}\n            </Button>\n          </div>\n\n          <div className={classes.buttonBox}>\n\n            <ButtonGroup\n              className={classes.buttons}\n              orientation=\"vertical\"\n              color=\"secondary\"\n              aria-label=\"color model buttons\"\n            >\n              {MODEL_NAMES.map(modelName => {\n                return (\n                  <Button\n                    key={modelName}\n                    variant={model === modelName ? 'contained' : 'outlined'}\n                    onClick={e => {setModel(modelName)}}\n                  >\n                    {modelName}\n                  </Button>\n                )\n              })}\n            </ButtonGroup>\n\n            <Button\n              className={`${classes.colorPreview} ${classes.showAxes}`}\n              onClick={() => setShowingAxes(!showingAxes)}\n              aria-label=\"show axes\"\n            >\n              <Checkbox\n                checked={showingAxes}\n                value=\"show axes\" />\n              {`${model} axis`}\n            </Button>\n\n          </div>\n        </div>\n\n      </Container>\n    </div>\n  );\n};\n\n\nexport default App;\n","import { indigo, pink }   from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n/* A custom theme for this app */\n/* as to color variation, see https://material-ui.com/customization/color/ */\nconst theme = createMuiTheme({\n  palette: {\n    // primary: {\n    //   main: '#80D8FF',\n    // },\n    // secondary: {\n    //   main: '#80CBC4',\n    // },\n    // error: {\n    //   main: red.A400,\n    // },\n    primary: indigo,\n    secondary: pink,\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}